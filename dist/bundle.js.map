{"version":3,"file":"bundle.js","sources":["../src/transform.js","../src/store.js","../src/mixin.js","../src/v-node.vue","../src/v-leaf.vue","../src/v-branch.vue","../src/index.vue","../src/index.js"],"sourcesContent":["/**\n * standardlize a normal tree object\n * \n * @param data   data to be transformed\n * @param conf   contains keys to extract data from `data`\n * @param level  identifier inferring depth\n */\nconst transform = (data = {}, conf = {}, level = '0', path = '') => {\n  let newConf = Object.assign({}, conf, defaultConf);\n  \n  let { node, branch, leaf, checked, open } = newConf;\n  let name = data[node] || '/';\n  let branches = data[branch] || [];\n  let leafs   = data[leaf] || [];\n  let canOpen  = branches.length > 0 || leafs.length > 0;\n\n  branches = branches.map((branch, i) => {\n    return transform(branch, newConf, `${level}.${i}`, `${path}/${branch.name}`);\n  });\n  \n  leafs = leafs.map((leaf, i) => {\n    return {\n      checked,\n      name: leaf,\n      level: `${level}.${i}`,\n      path: `${path}/${leaf}`\n    };\n  });\n\n  return {\n    name,\n    level,\n    path,\n    node: { name, open, canOpen, checked, level },\n    branches,\n    leafs\n  };\n};\n\nconst defaultConf = {\n  node: 'name',\n  branch: 'dirs',\n  leaf: 'files',\n  open: false,\n  checked: false\n};\n\nmodule.exports = {\n  transform,\n  defaultConf\n};\n","const { transform, defaultConf } = require('../src/transform');\nconst arrPush = [].push;\n\nmodule.exports = class Store {\n  constructor(data, conf) {\n    this.dataStore = this.setStore(data, conf);\n  }\n\n  /**\n   * set data store\n   */\n  setStore(data = {}, conf = defaultConf) {\n    return (this.dataStore = transform(data, conf));\n  }\n\n  /**\n   * get parent branch by levelId.\n   * result for a leaf is the branch it is on,\n   * for a branch,  result is it's parent branch.\n   * \n   * @param levelId\n   */\n  findParentBranch(levelId = '') {\n    let length = levelId.length;\n    let branch = this.dataStore;\n\n    if (length <= 1) {\n      return null;\n    }\n    \n    let lvs    = levelId.split('.').slice(1, -1);\n    let index  = 0;\n\n    while (branch && (index = lvs.shift())) {\n      branch = branch.branches[index];\n    }\n\n    return branch;\n  }\n\n  /**\n   * get current branch\n   * \n   * @param levelId \n   */\n  findCurrentBranch(levelId = '') {\n    let lvs    = levelId.split('.').slice(1);\n    let index  = 0;\n    let branch = this.dataStore;\n\n    while (branch && (index = lvs.shift())) {\n      branch = branch.branches[index];\n    }\n\n    return branch;\n  }\n\n  /**\n   * @param data     replace empty branch\n   * @param levelId  inditifying where to replace\n   * @param conf     contains keys to extract data from `data` \n   */\n  replaceBranch(data, levelId = '0', conf = defaultConf) {\n    let lvs    = levelId.split('.').slice(1);\n    let index  = 0;\n    let clone  = Object.assign({}, this.dataStore);\n    let parent = clone;\n    let replacePos = lvs.pop();\n\n    while (parent && (index = lvs.shift())) {\n      parent = parent.branches[index];\n    }\n\n    parent.branches[replacePos] = transform(data, conf, levelId);\n\n    return (this.dataStore = clone);\n  }\n\n  /**\n   * check ascendents of certain level rescursively\n   * to see if they should get checked\n   * \n   * @param level    the descendent levelId\n   * @param checked  if the descendent is checked\n   */\n  checkAscendents(level, checked) {\n    let branch = this.findParentBranch(level);\n    let nextStatus = false;\n\n    if (branch) {\n      if (checked) {\n        let allBranchesChecked = !branch.branches.some(b => !b.node.checked);\n        let allLeavesChecked   = !branch.leafs.some(l => !l.checked);\n        nextStatus = allBranchesChecked && allLeavesChecked;\n      }\n\n      branch.node.checked = nextStatus;\n      this.checkAscendents(branch.level, nextStatus);\n    }\n  }\n\n  /**\n   * get result as path\n   */\n  getPathResult(branch) {\n    branch = branch || this.dataStore;\n\n    let result = [];\n    let { node, branches, leafs, path } = branch;\n\n    if (node.checked) {\n      result.push(branch.path);\n    } else {\n      leafs.forEach(({ checked, path }) => {\n        if (checked) {\n          result.push(path);\n        }\n      });\n\n      branches.forEach(branch => {\n        arrPush.apply(result, this.getPathResult(branch))\n      });\n    }\n\n    return result;\n  }\n};\n","module.exports = {\n  created() {\n    /**\n     * when the branch is checked/unchecked\n     * all descendents should be checked/unchecked too\n     */\n    this.__EVENT_BUS.$on('descendents_force_checked', (level, checked) => {\n      let lvId = this.data.level;\n\n      if (\n        lvId.indexOf(level) === 0\n        && lvId.slice(level.length).length > 0\n      ) {\n        this.data.checked = checked;\n      }\n    });\n\n\n  }\n};\n","<template>\n  <li class=\"v-node\">\n    <i\n      class=\"fa\"\n      :class=\"[ data.canOpen && data.open ? 'fa-folder-open-o' : 'fa-folder-o' ]\"\n      @click=\"toggleExpanded\"\n    ></i>\n    <span @click=\"toggleChecked\">\n      <i class=\"fa\" :class=\"[ data.checked ? 'fa-check-square-o' : 'fa-square-o' ]\"></i>\n      {{data.name}}\n    </span>\n  </li>\n</template>\n\n<script>\n  import Mixin from './mixin';\n  \n  export default {\n    props: {\n      data: Object,\n    },\n    mixins: [Mixin],\n    methods: {\n      toggleChecked() {\n        this.__EVENT_BUS.$emit('node_toggle_checked', this.data);\n      },\n      toggleExpanded() {\n        this.__EVENT_BUS.$emit('node_toggle_expanded', this.data);\n      }\n    },\n    created() {}\n  };\n</script>\n\n<style lang=\"css\">\n  .v-node {\n    cursor: pointer;\n  }\n  .v-node .fa {\n    width: 20px;\n    color: #0d83e6;\n    text-align: center;\n  }\n  .v-node .fa:hover {\n    color: #0c71c5;\n  }\n</style>","<template>\n  <li class=\"v-leaf\" @click=\"toggleChecked\">\n    <i class=\"fa\" :class=\"[ data.checked ? 'fa-check-square-o' : 'fa-square-o' ]\"></i>\n    {{data.name}}\n  </li>\n</template>\n\n<script>\n  import Mixin from './mixin';\n\n  export default {\n    props: {\n      data: Object\n    },\n    mixins: [Mixin],\n    methods: {\n      toggleChecked() {\n        this.__EVENT_BUS.$emit('leaf_toggle_checked', this.data);\n      }\n    },\n    created() {}\n  };\n</script>\n\n<style lang=\"css\">\n  .v-leaf {\n    margin-left: 27px;\n    cursor: pointer;\n  }\n  .v-leaf .fa {\n    width: 20px;\n    color: #0d83e6;\n    text-align: center;\n  }\n  .v-leaf .fa:hover {\n    color: #0c71c5;\n  }\n</style>","<template>\n  <ul class=\"branch\">\n    <v-node :data=\"node\"></v-node>\n    <v-branch v-show=\"node.open\" v-for=\"branch in branches\" :data=\"branch\"></v-branch>\n    <v-leaf\n      v-show=\"node.open\"\n      v-for=\"leaf in leafs\"\n      :data=\"leaf\"\n    />\n  </ul>\n</template>\n\n<script>\n  import VLeaf from './v-leaf.vue';\n  import VNode from './v-node.vue';\n\n  export default {\n    name: 'v-branch',\n    props: {\n      data: Object\n    },\n    components: {\n      'v-node': VNode,\n      'v-leaf': VLeaf\n    },\n    computed: {\n      branches() {\n        return this.data.branches;\n      },\n      leafs() {\n        return this.data.leafs;\n      },\n      node() {\n        return  this.data.node;\n      }\n    }\n  };\n</script>\n","<template lang=\"html\">\n  <ul class=\"branch\">\n    <v-node :data=\"node\"></v-node>\n    <v-branch v-show=\"node.open\" v-for=\"branch in branches\" :data=\"branch\"></v-branch>\n    <v-leaf v-show=\"node.open\" v-for=\"leaf in leafs\" :data=\"leaf\"></v-leaf>\n  </ul>\n</template>\n\n<script>\n  import Store from './store';\n  import VNode from './v-node.vue';\n  import VLeaf from './v-leaf.vue';\n  import VBranch from './v-branch.vue';\n\n  export default {\n    name: 'v-tree-select',\n    props: {\n      data: Object,\n      conf: Object\n    },\n    components: {\n      'v-node': VNode,\n      'v-leaf': VLeaf,\n      'v-branch': VBranch\n    },\n    data() {\n      let store = new Store(this.data, this.conf);\n\n      return {\n        store,\n        root: store.dataStore\n      };\n    },\n    computed: {\n      branches() {\n        return this.root.branches;\n      },\n      leafs() {\n        return this.root.leafs;\n      },\n      node() {\n        return this.root.node;\n      }\n    },\n    created() {\n      this.__EVENT_BUS.$on('node_toggle_expanded', node => {\n        node.open = !node.open;\n      });\n\n      this.__EVENT_BUS.$on('node_toggle_checked', node => {\n        let branch = this.store.findCurrentBranch(node.level);\n        let level  = branch.level;\n        let nextState = !branch.node.checked;\n        \n        branch.node.checked = nextState;\n        branch.branches.forEach(b => b.node.checked = nextState);\n        branch.leafs.forEach(l => l.checked = nextState);\n\n        this.store.checkAscendents(level, nextState);\n        this.__EVENT_BUS.$emit('descendents_force_checked', branch.level, nextState);\n\n        this.$nextTick(() => {\n          this.$emit('change', this.store.getPathResult());\n        });\n      });\n\n      this.__EVENT_BUS.$on('leaf_toggle_checked', leaf => {\n        let nextState = !leaf.checked;\n        leaf.checked = nextState;\n        this.store.checkAscendents(leaf.level, nextState);\n        \n        this.$nextTick(() => {\n          this.$emit('change', this.store.getPathResult());\n        });\n      });\n    }\n  };\n</script>\n\n<style>\n  .branch {\n    -moz-user-select: none;\n    -ms-user-select: none;\n    -webkit-user-select: none;\n    user-select: none;\n    color: #666;\n    font-size: 18px;\n  }\n  .branch > .branch {\n    margin-left: 27px;\n  }\n</style>\n\n\n","import VTreeComponent from './index.vue';\nimport VBranchComponent from './v-branch.vue';\n\nVTreeComponent.install = Vue => {\n  // inject a eventbus\n  Vue.prototype.__EVENT_BUS = new Vue();\n  Vue.use(VBranchComponent);\n  Vue.component(VTreeComponent.name, VTreeComponent);\n};\nVBranchComponent.install = Vue => {\n  Vue.component(VBranchComponent.name, VBranchComponent);\n};\n\nexport default VTreeComponent;\n"],"names":["const","transform","let","defaultConf","this","Mixin","store","Store","VTreeComponent","VBranchComponent"],"mappings":"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"}