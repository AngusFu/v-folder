{"version":3,"file":"build.js","sources":["../node_modules/object-assign/index.js","../src/transform.js","../node_modules/v-deep-clone/index.js","../src/store.js","../src/mixin.js","../src/v-node.vue","../src/v-leaf.vue","../src/v-branch.vue","../src/index.vue","../src/install.js","../src/index.js"],"sourcesContent":["/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","import objectAssign from 'object-assign';\n\n/**\n * standardlize a normal tree object\n * \n * @param data   data to be transformed\n * @param conf   contains keys to extract data from `data`\n * @param level  identifier inferring depth\n */\nexport default transform;\n\nfunction transform(data = {}, config, level, path = \"\") {\n  path = path.replace(/^\\s*\\/+/, '/');\n  let { node, branch, leaf, check, open } = config;\n  let name = data[node] || '/';\n  let branches = data[branch] || [];\n  let leafs   = data[leaf] || [];\n  let canOpen  = branches.length > 0 || leafs.length > 0;\n\n  if (!path) {\n    path = name === '/' ? name : `/${name}`;\n  }\n\n  branches = branches.map((item, i) => {\n    if (typeof item === 'string') {\n      let o = {};\n      o[node] = item;\n      item = o;\n    }\n\n    return transform(item, config, `${level}.${i}`, `${path}/${item[node]}`);\n  });\n  \n  leafs = leafs.map((leaf, i) => {\n    return {\n      name: leaf,\n      type: 'leaf',\n      check,\n      level: `${level}.${i}`,\n      path: `${path}/${leaf}`\n    };\n  });\n\n  let status = canOpen ? 'filled' : 'empty';\n  return {\n    name,\n    type: 'branch',\n    level,\n    path,\n    node: { name, open: level == 0 || open, canOpen, check, level, path, type: 'node', status },\n    branches,\n    leafs,\n  };\n};\n","module.exports = function clone (obj) {\n  var temp = {};\n  if (!obj || typeof obj !== 'object') {\n    return obj;\n  }\n  if (obj instanceof Array) {\n    temp = [];\n  }\n  Object.keys(obj).forEach(function (value) {\n    if (typeof obj[value] === 'object') {\n      temp[value] = clone(obj[value]);\n    } else {\n      temp[value] = obj[value];\n    }\n  });\n  return temp;\n};","import objectAssign from 'object-assign';\nimport deepClone from 'v-deep-clone';\nimport transform from './transform';\n\nconst arrPush = [].push;\nconst defaultConf = {\n  node: 'name',\n  branch: 'dirs',\n  leaf: 'files',\n  open: false,\n  check: -1\n};\n\nexport default class Store {\n  constructor(data, conf) {\n    this.conf = objectAssign({}, defaultConf, conf);\n    let path = data.path || data[this.conf.node] || '/';\n    let name = path.split('/').filter(s => !!s).slice(-1)[0] || data.name;\n    data.name = name;\n    this.dataStore = transform(data, this.conf, '0', path);\n  }\n\n  /**\n   * set data store\n   * @private\n   */\n  replace(newTree) {\n    this.dataStore = newTree;\n  }\n\n  /**\n   * get parent branch by levelId.\n   * result for a leaf is the branch it is on,\n   * for a branch,  result is it's parent branch.\n   * \n   * @private\n   * @param levelId\n   */\n  findParentBranch(levelId = '') {\n    let length = levelId.length;\n    let branch = this.dataStore;\n\n    if (length <= 1) {\n      return null;\n    }\n    \n    let lvs    = levelId.split('.').slice(1, -1);\n    let index  = 0;\n\n    while (branch && (index = lvs.shift())) {\n      branch = branch.branches[index];\n    }\n\n    return branch;\n  }\n\n  /**\n   * get current branch\n   * \n   * @private\n   * @param levelId \n   */\n  findCurrentBranch(levelId = '') {\n    let lvs    = levelId.split('.').slice(1);\n    let index  = 0;\n    let branch = this.dataStore;\n\n    while (branch && (index = lvs.shift())) {\n      branch = branch.branches[index];\n    }\n\n    return branch;\n  }\n\n  /**\n   * check ascendents of certain level rescursively\n   * to see if they should get checked\n   * this is a passive ation\n   * \n   * @private\n   * @param branch    the descendent branch\n   * @param check     the descendent's check status\n   */\n  checkBranchAscendents(branch, check) {\n    if (!branch) return;\n\n    let { branches, leafs, node, level } = branch;\n    let nextStatus = 0;\n\n    switch (check) {\n      case 1:\n        // at least nextStatus will be zero,\n        // so let's see if all children checked\n        let branchesAllChecked = !branches.length || !branches.some(b => b.node.check < 1);\n        let leafsAllChecked = !leafs.length || !leafs.some(f => f.check < 1);\n        nextStatus = branchesAllChecked && leafsAllChecked ? 1 : 0;\n        break;\n\n      case 0:\n        // no doubt\n        nextStatus = 0;\n        break;\n\n      case -1:\n        // if all children are -1\n        // we'll get -1\n        // else we'll get 0\n        let branchesAllUnchecked = !branches.length || !branches.some(b => b.node.check > -1);\n        let leafsAllUnChecked = !leafs.length || !leafs.some(f => f.check > -1);\n        nextStatus = branchesAllUnchecked && leafsAllUnChecked ? -1 : 0;\n        break;\n    }\n\n    node.check = nextStatus;\n    this.checkBranchAscendents(this.findParentBranch(level), nextStatus);\n  }\n\n  /**\n   * check branch children and decendents.\n   * if node is checked, all children are checked too and vice versa.\n   *\n   * @private\n   * @param branch   current descendent branch\n   * @param check    the ascendent's check status\n   */\n  checkBranchDescendents(branch, check) {\n    branch.node.check = check;\n    if (!check) return;\n    branch.leafs.forEach(l => l.check = check);\n    branch.branches.forEach(b => {\n      b.node.check = check;\n      this.checkBranchDescendents(b, check);\n    });\n  }\n\n  /************************************************************************\n   * * * * * * * * * * * * Public Method Below * * * * * * * * * * * * * * \n   ************************************************************************/\n  /**\n   * if one node is checked/unchecked,\n   * we have to check/uncheck all ites descendents,\n   * and find if its ascendents should be checked.\n   * \n   * @param level  level of the node checked/unchecked\n   */\n  checkNode(node) {\n    // node.check: -1(unchecked) 0(imtermedite) 1(checked)\n    // 0 -> 1 (and state 0 is passive)\n    // 1 <=> -1\n    let branch = this.findCurrentBranch(node.level);\n    let checkState = branch.node.check;\n    let nextState = checkState < 1 ? 1 : -1;\n    this.checkBranchDescendents(branch, nextState);\n    this.checkBranchAscendents(this.findParentBranch(branch.level), nextState);\n  }\n  \n  /**\n   * if a leaf is checked,\n   * we have to check all its ascendents\n   * to see if any should get checked to.\n   * \n   * @param leaf\n   */\n  checkLeaf(leaf) {\n    let leafBranch = this.findParentBranch(leaf.level);\n    let nextState = -1 * leaf.check;\n    leaf.check = nextState;\n    this.checkBranchAscendents(leafBranch, nextState);\n  }\n\n   /**\n    * merge a branch to current tree\n    * @param branch\n    */\n  merge(\n    data = {},\n    node = {\n      level: '0',\n      path: ''\n    }\n  ) {\n    let { level, path, check } = node;\n    let lvs = level.split('.').slice(1);\n    let branch = transform(data, this.conf, level, path);\n\n    branch.node.open = true;\n    branch.node.check = check;\n    branch.node.status = 'done';\n\n    if (lvs.length === 0) {\n      this.replace(branch);\n    } else {\n      let clone = deepClone(this.dataStore);\n      let top   = clone;\n      let pos   = lvs.pop();\n      let index = 0;\n\n      while (index = lvs.shift()) {\n        top = top.branches[index];\n      }\n      top.branches.splice(pos, 1, branch);\n      top.node.canOpen = true;\n\n      this.replace(clone);\n    }\n\n\n    this.checkBranchDescendents(branch, check);\n  }\n\n  /**\n   * deal with actions\n   */\n  commit(action, elem) {\n    return new Promise((resolve, reject) => {\n      let isNode = elem.type === 'node';\n      \n      if (action === 'change') {\n          this[isNode ? 'checkNode' : 'checkLeaf'](elem);\n          return resolve(this.getPathResult());\n      }\n\n      if (action === 'unfold' && isNode) {\n        elem.open = !elem.open;\n\n        if (!elem.canOpen && elem.status !== 'done') {\n          elem.status = 'loading';\n          resolve();\n        } else {\n          reject();\n        }\n      }\n    });\n  }\n\n  /**\n   * get result as path\n   */\n  getPathResult(branch) {\n    branch = branch || this.dataStore;\n\n    let result = [];\n    let { node, branches, leafs, path } = branch;\n\n    if (node.check > 0) {\n      result.push(branch.path);\n    } else {\n      leafs.forEach(({ check, path }) => {\n        if (check > 0) {\n          result.push(path);\n        }\n      });\n\n      branches.forEach(branch => {\n        arrPush.apply(result, this.getPathResult(branch))\n      });\n    }\n\n    return result;\n  }\n\n  raw() {\n    return transform.raw(this.dataStore, this.conf);\n  }\n};\n","export default {\n  methods: {\n    notify(type) {\n      this.___vemit(type, this.data);\n    },\n    listen(type, fn) {\n      this.___von(type, e => {\n        fn(e);\n      });\n    },\n    distroy() {\n      this.___voff();\n    }\n  }\n};\n","<template>\n  <li class=\"v-node\" :key=\"data.level\">\n    <i\n      class=\"fa\"\n      :class=\"folderClass\"\n      @click=\"notify('unfold')\"\n    ></i>\n    <span @click=\"notify('change')\">\n      <i class=\"fa\" :class=\"checkboxClass\"></i>\n      {{data.name}}\n    </span>\n  </li>\n</template>\n\n<script>\n  import EventMixin from './mixin';\n\n  const classNames = [\n    'fa-square-o',\n    'fa-minus-square-o',\n    'fa-check-square-o',\n  ];\n\n  export default {\n    name: 'v-node',\n    mixins: [EventMixin],\n    props: {\n      data: {\n        type: Object,\n        required: true\n      },\n      uid: {\n        type: [String, Number],\n        required: true\n      }\n    },\n    computed: {\n      folderClass() {\n        let data = this.data;\n        let folderLoding = data.status === 'loading';\n        let folderOpen = data.canOpen && data.open;\n        let isEmpty = !data.canOpen && data.status === 'done';\n        return {\n          'fa-spinner cursor-progress': folderLoding,\n          'fa-folder-open-o': !folderLoding && folderOpen,\n          'fa-folder-o': !folderLoding && !folderOpen,\n          'cursor-no-ops': isEmpty\n        };\n      },\n      checkboxClass() {\n        return classNames[this.data.check + 1];\n      }\n    }\n  };\n</script>\n","<template>\n  <li class=\"v-leaf\" @click=\"notify('change')\" :key=\"data.level\">\n    <i class=\"fa\" :class=\"className\"></i>\n    <span>{{data.name}}</span>\n  </li>\n</template>\n\n<script>\n  import EventMixin from './mixin';\n\n  const classNames = [\n    'fa-square-o',\n    'fa-minus-square-o',\n    'fa-check-square-o',\n  ];\n\n  export default {\n    name: 'v-leaf',\n    mixins: [EventMixin],\n    props: {\n      data: {\n        type: Object,\n        required: true\n      },\n      uid: {\n        type: [String, Number],\n        required: true\n      }\n    },\n    computed: {\n      className() {\n        return classNames[this.data.check + 1];\n      }\n    }\n  };\n</script>\n","<template>\n  <li :key=\"node.level\" class=\"v-branch\">\n    <ul class=\"v-branch-body\">\n      <v-node :data=\"node\" :uid=\"uid\"></v-node>\n      <v-branch v-show=\"node.open\" v-for=\"branch in branches\" :data=\"branch\" :uid=\"uid\"></v-branch>\n      <v-leaf v-show=\"node.open\" v-for=\"leaf in leafs\" :data=\"leaf\" :uid=\"uid\"></v-leaf>\n    </ul>\n  </li>\n</template>\n\n<script>\n  import EventMixin from './mixin';\n  import VLeaf from './v-leaf.vue';\n  import VNode from './v-node.vue';\n\n  export default {\n    name: 'v-branch',\n    mixins: [EventMixin],\n    props: {\n      data: {\n        type: Object,\n        required: true\n      },\n      uid: {\n        type: [String, Number],\n        required: true\n      }\n    },\n    components: {\n      'v-node': VNode,\n      'v-leaf': VLeaf\n    },\n    computed: {\n      branches() {\n        return this.data.branches;\n      },\n      leafs() {\n        return this.data.leafs;\n      },\n      node() {\n        return  this.data.node;\n      }\n    }\n  };\n</script>\n","<template>\n  <ul class=\"v-branch-body\">\n    <v-node :data=\"node\" :uid=\"uid\"></v-node>\n    <v-branch v-show=\"node.open\" v-for=\"branch in branches\" :data=\"branch\" :uid=\"uid\"></v-branch>\n    <v-leaf v-show=\"node.open\" v-for=\"leaf in leafs\" :data=\"leaf\" :uid=\"uid\"></v-leaf>\n  </ul>\n</template>\n<script>\n  import Store from './store';\n  import EventMixin from './mixin';\n  import VNode from './v-node.vue';\n  import VLeaf from './v-leaf.vue';\n  import VBranch from './v-branch.vue';\n  let uid = 0;\n\n  export default {\n    name: 'v-folder',\n    mixins: [EventMixin],\n    props: {\n      data: Object,\n      ajax: Object,\n      conf: Object\n    },\n    components: {\n      'v-node': VNode,\n      'v-leaf': VLeaf,\n      'v-branch': VBranch\n    },\n    watch: {\n      data(newVal, oldVal) {\n        let nameKey = this.conf && this.conf.node || 'name';\n        if (newVal[nameKey] !== oldVal[nameKey]) {\n          this.store = new Store(newVal, this.conf);\n        }\n      }\n    },\n    data() {\n      return {\n        uid: uid++,\n        store: new Store(this.data, this.conf)\n      };\n    },\n\n    computed: {\n      root() {\n        return this.store.dataStore;\n      },\n      branches() {\n        return this.root.branches;\n      },\n      leafs() {\n        return this.root.leafs;\n      },\n      node() {\n        return this.root.node;\n      }\n    },\n    \n    methods: {\n      resTransform(data, node) {\n        let conf = this.conf || {};\n        let dirKey  = conf['branch'] || 'dirs';\n        let fileKey = conf['leaf'] || 'files';\n        let nameKey = conf['node'] || 'name';\n\n        data[nameKey] = node.name;\n        data[dirKey]  = data[dirKey].map(d => ({[nameKey]: d}));\n        return data;\n      },\n\n      getReqConf(node) {\n        let reqConf = this.ajax || {};\n        let { url, method, data, params, pathAs, headers } = reqConf;\n\n        if (method || method.toUpperCase() === 'GET') {\n          reqConf.params = (params || {});\n          reqConf.params[pathAs] = node.path;\n        } else {\n          reqConf.data = (data || {});\n          reqConf.data[pathAs] = node.path;\n        }\n\n        reqConf.method = method || 'GET';\n        reqConf.headers = headers || {};\n\n        return reqConf;\n      },\n\n      request(node) {\n        if (!this.ajax) {\n          return Promise.reject('ajax:false');\n        }\n\n        let process = this.ajax.process || (res => res);\n\n        return this.$http(this.getReqConf(node))\n          .then(res => {\n            let data = process(res.data);\n            return this.resTransform(data, node);\n          });\n      }\n    },\n\n    created() {\n      this.listen('change', node => {\n        this.store.commit('change', node).then(res => this.$emit('change', res));\n      });\n\n      this.listen('unfold', node => {\n        if (node.open && node.canOpen) {\n          node.open =! node.open;\n          return;\n        }\n\n        this.store.commit('unfold', node)\n          .then(() => {\n\n            this.request(node)\n            .then(data => {\n              if (data) {\n                this.store.merge(data, node);\n              } else {\n                throw 'empty';\n              }\n            })\n            .catch(e => {\n              node.status = 'empty';\n              window.console && console.error(e);\n            });\n\n          })\n          .catch(e => node.status = 'done');\n\n      });\n    },\n    destroyed () {\n      this.distroy();\n    }\n  };\n</script>\n\n<style>\n  /*----------------------------------------------------------------\n                            .v-branch\n  ---------------------------------------------------------------*/\n  .v-branch-body {\n    padding: 0;\n    font-size: 16px;\n    color: #666;\n    list-style: none;\n  }\n  .v-branch-body .v-branch {\n    padding-left: 27px;\n  }\n  .v-branch ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  /*----------------------------------------------------------------\n                            .v-node\n  ---------------------------------------------------------------*/\n  .v-node {\n    padding: 0 0 0  27px;\n    list-style: none;\n    overflow: hidden;\n    vertical-align: middle;\n  }\n  .v-node > * {\n    cursor: pointer;\n  }\n  .v-node .fa {\n    width: 20px;\n    color: #0d83e6;\n    text-align: center;\n  }\n  .v-node .fa:hover {\n    color: #0c71c5;\n  }\n\n  .v-node .cursor-no-ops {\n    cursor: not-allowed;\n  }\n  .v-node .cursor-progress {\n    cursor: progress;\n  }\n\n  /*----------------------------------------------------------------\n                            .v-leaf\n  ---------------------------------------------------------------*/\n  .v-leaf {\n    margin: 0 0 0 27px;\n    padding: 0 0 0 27px;\n    vertical-align: middle;\n  }\n  .v-leaf > * {\n    cursor: pointer;\n  }\n  .v-leaf .fa {\n    display: inline-block;\n    width: 20px;\n    color: #0d83e6;\n    text-align: center;\n  }\n  .v-leaf .fa:hover {\n    color: #0c71c5;\n  }\n</style>\n\n\n","export const eventMix = function (Vue) {\n  let hub = new Vue();\n  let proto = Vue.prototype;\n\n  proto.___von = function (type, cb) {\n    let uid = this.uid;\n    let vm = this;\n    let fn = function(e) {\n      if (uid === e.uid && cb) {\n        cb(e.data);\n      }\n    };\n    hub.$on(`#${uid}@${type}`, fn);\n  };\n\n  proto.___vemit = function (type, data) {\n    let uid = this.uid;\n    hub.$emit(`#${uid}@${type}`, { data, uid });\n  };\n\n  proto.___voff = function (type, fn) {\n    let uid = this.uid;\n\n    if (type) {\n      hub.$off(`#${uid}@${type}`, fn);\n    } else {\n      uid = `#${uid}@`\n      let len = uid.length;\n      let types = Object.keys(hub._events);\n      let match = types.filter(k => k.indexOf(uid) === 0);\n      match.forEach(k => {\n        hub.$off(k, fn);\n      })\n    }\n  };\n};\n","import VFolderComp from './index.vue';\nimport { eventMix } from './install';\n\nVFolderComp.install = Vue => {\n  let [mj, mi, pa] = Vue.version.split('.');\n  \n  if (mj > 2 || mj === 2 && (mi > 1 || mi === 1 && pa >= 5)) {\n    throw 'You should at least get Vue.js@2.1.5.'\n  }\n\n  eventMix(Vue);\n  Vue.component(VFolderComp.name, VFolderComp);\n};\n\nexport default VFolderComp;\n"],"names":["toObject","val","undefined","TypeError","Object","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","order2","map","n","join","test3","split","forEach","letter","keys","err","transform","data","config","level","path","replace","node","branch","leaf","check","open","name","branches","leafs","canOpen","length","item","let","o","type","status","getOwnPropertySymbols","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","target","source","from","symbols","to","s","arguments","key","call","clone","obj","temp","Array","value","arrPush","push","defaultConf","Store","conf","this","objectAssign","filter","slice","dataStore","newTree","findParentBranch","levelId","lvs","index","shift","findCurrentBranch","checkBranchAscendents","nextStatus","branchesAllChecked","some","b","leafsAllChecked","f","branchesAllUnchecked","leafsAllUnChecked","checkBranchDescendents","l","this$1","checkNode","checkState","nextState","checkLeaf","leafBranch","merge","deepClone","top","pos","pop","splice","commit","action","elem","Promise","resolve","reject","isNode","getPathResult","result","ref","apply","raw","methods","notify","___vemit","listen","fn","___von","e","distroy","___voff","classNames","mixins","EventMixin","props","required","uid","Number","computed","folderClass","folderLoding","folderOpen","isEmpty","fa-spinner cursor-progress","fa-folder-open-o","fa-folder-o","cursor-no-ops","checkboxClass","className","components","v-node","VNode","v-leaf","VLeaf","ajax","v-branch","VBranch","watch","newVal","oldVal","nameKey","store","root","resTransform","dirKey","d","getReqConf","reqConf","method","params","pathAs","headers","toUpperCase","request","process","res","$http","then","created","$emit","catch","window","console","error","destroyed","eventMix","Vue","hub","proto","cb","$on","$off","types","_events","match","k","indexOf","VFolderComp","install","version","mj","mi","pa","component"],"mappings":"kLAYA,SAASA,GAASC,GACjB,GAAY,OAARA,GAAwBC,SAARD,EACnB,KAAM,IAAIE,WAAU,wDAGrB,OAAOC,QAAOH,GAGf,QAASI,KACR,IACC,IAAKD,OAAOE,OACX,OAAO,CAMR,IAAIC,GAAQ,GAAIC,QAAO,MAEvB,IADAD,EAAM,GAAK,KACkC,MAAzCH,OAAOK,oBAAoBF,GAAO,GACrC,OAAO,CAKR,KAAK,GADDG,MACKC,EAAI,EAAGA,EAAI,GAAIA,IACvBD,EAAM,IAAMF,OAAOI,aAAaD,IAAMA,CAEvC,IAAIE,GAAST,OAAOK,oBAAoBC,GAAOI,IAAI,SAAUC,GAC5D,MAAOL,GAAMK,IAEd,IAAwB,eAApBF,EAAOG,KAAK,IACf,OAAO,CAIR,IAAIC,KAIJ,OAHA,uBAAuBC,MAAM,IAAIC,QAAQ,SAAUC,GAClDH,EAAMG,GAAUA,IAGf,yBADEhB,OAAOiB,KAAKjB,OAAOE,UAAWW,IAAQD,KAAK,IAM9C,MAAOM,GAER,OAAO,GCjDT,QAASC,GAAUC,EAAWC,EAAQC,EAAOC,qCAAO,IAClDA,EAAOA,EAAKC,QAAQ,UAAW,IAC/B,IAAMC,UAAMC,WAAQC,SAAMC,UAAOC,SAC7BC,EAAOV,EAAKK,IAAS,IACrBM,EAAWX,EAAKM,OAChBM,EAAUZ,EAAKO,OACfM,EAAWF,EAASG,OAAS,GAAKF,EAAME,OAAS,CAEhDX,KACHA,EAAgB,MAATO,EAAeA,EAAO,IAAIA,GAGnCC,EAAWA,EAASrB,IAAI,SAACyB,EAAM5B,GAC7B,GAAoB,gBAAT4B,GAAmB,CAC5BC,GAAIC,KACJA,GAAEZ,GAAQU,EACVA,EAAOE,EAGT,MAAOlB,GAAUgB,EAAMd,EAAQC,MAAYf,EAAKgB,MAAWY,EAAKV,MAGlEO,EAAQA,EAAMtB,IAAI,SAACiB,EAAMpB,GACvB,OACEuB,KAAMH,EACNW,KAAM,OACNV,MAAAA,EACAN,MAAOA,MAAYf,EACnBgB,KAAMA,MAAWI,IAIrBS,IAAIG,GAASN,EAAU,SAAW,OAClC,QACEH,KAAAA,EACAQ,KAAM,SACNhB,MAAAA,EACAC,KAAAA,EACAE,MAAQK,KAAAA,EAAMD,KAAe,GAATP,GAAcO,EAAMI,QAAAA,EAASL,MAAAA,EAAON,MAAAA,EAAOC,KAAAA,EAAMe,KAAM,OAAQC,OAAAA,GACnFR,SAAAA,EACAC,MAAAA,GD3CJ,GAAIQ,GAAwBxC,OAAOwC,sBAC/BC,EAAiBzC,OAAO0C,UAAUD,eAClCE,EAAmB3C,OAAO0C,UAAUE,uBAsDvB3C,IAAoBD,OAAOE,OAAS,SAAU2C,EAAQC,GAKtE,IAAK,GAJDC,GAEAC,cADAC,EAAKrD,EAASiD,GAGTK,EAAI,EAAGA,EAAIC,UAAUjB,OAAQgB,IAAK,CAC1CH,EAAO/C,OAAOmD,EAAUD,GAExB,KAAK,GAAIE,KAAOL,GACXN,EAAeY,KAAKN,EAAMK,KAC7BH,EAAGG,GAAOL,EAAKK,GAIjB,IAAIZ,EAAuB,CAC1BQ,EAAUR,EAAsBO,EAChC,KAAK,GAAIxC,GAAI,EAAGA,EAAIyC,EAAQd,OAAQ3B,IAC/BoC,EAAiBU,KAAKN,EAAMC,EAAQzC,MACvC0C,EAAGD,EAAQzC,IAAMwC,EAAKC,EAAQzC,MAMlC,MAAO0C,MExFS,QAASK,GAAOC,GAC/B,GAAIC,KACJ,OAAKD,IAAsB,gBAARA,IAGfA,YAAeE,SACjBD,MAEFxD,OAAOiB,KAAKsC,GAAKxC,QAAQ,SAAU2C,GACP,gBAAfH,GAAIG,GACbF,EAAKE,GAASJ,EAAMC,EAAIG,IAExBF,EAAKE,GAASH,EAAIG,KAGfF,GAZED,GCCLI,KAAaC,KACbC,GACJpC,KAAM,OACNC,OAAQ,OACRC,KAAM,QACNE,MAAM,EACND,OAAO,GAGYkC,EAAM,SACb1C,EAAM2C,GAClBC,KAAOD,KAAOE,KAAiBJ,EAAaE,EAC5C,IAAMxC,GAAOH,EAAKG,MAAQH,EAAK4C,KAAKD,KAAKtC,OAAS,IAC5CK,EAAOP,EAAKT,MAAM,KAAKoD,OAAO,SAAAhB,WAAOA,IAAGiB,OAAM,GAAI,IAAM/C,EAAKU,IACnEV,GAAOU,KAAOA,EACdkC,KAAOI,UAAYjD,EAAUC,EAAM4C,KAAKD,KAAM,IAAKxC,GAOrDuC,aAAEtC,iBAAQ6C,GACRL,KAAOI,UAAYC,GAWrBP,YAAEQ,0BAAiBC,kBAAU,GAC3B,IAAMrC,GAASqC,EAAQrC,OACjBR,EAASsC,KAAKI,SAEpB,IAAMlC,GAAU,EACd,MAAS,KAMX,KAHA,GAAMsC,GAASD,EAAQzD,MAAM,KAAKqD,MAAM,GAAG,GACrCM,EAAS,EAEN/C,IAAW+C,EAAQD,EAAIE,UAC9BhD,EAAWA,EAAOK,SAAS0C,EAG7B,OAAS/C,IASXoC,YAAEa,2BAAkBJ,kBAAU,GAK5B,KAJA,GAAMC,GAASD,EAAQzD,MAAM,KAAKqD,MAAM,GAClCM,EAAS,EACT/C,EAASsC,KAAKI,UAEX1C,IAAW+C,EAAQD,EAAIE,UAC9BhD,EAAWA,EAAOK,SAAS0C,EAG7B,OAAS/C,IAYXoC,YAAEc,+BAAsBlD,EAAQE,GAC9B,GAAOF,EAAP,CAEA,GAAQK,cAAUC,UAAOP,SAAMH,UACzBuD,EAAa,CAEnB,QAAUjD,GACR,IAAO,GAGL,GAAMkD,IAAsB/C,EAASG,SAAWH,EAASgD,KAAK,SAAAC,SAAKA,GAAEvD,KAAKG,MAAQ,IAC5EqD,GAAmBjD,EAAME,SAAWF,EAAM+C,KAAK,SAAAG,SAAKA,GAAEtD,MAAQ,GACpEiD,GAAeC,GAAsBG,EAAkB,EAAI,CAC3D,MAEF,KAAO,GAELJ,EAAe,CACf,MAEF,MAAO,EAIL,GAAMM,IAAwBpD,EAASG,SAAWH,EAASgD,KAAK,SAAAC,SAAKA,GAAEvD,KAAKG,OAAQ,IAC9EwD,GAAqBpD,EAAME,SAAWF,EAAM+C,KAAK,SAAAG,SAAKA,GAAEtD,OAAQ,GACtEiD,GAAeM,GAAwBC,GAAoB,EAAK,EAIpE3D,EAAOG,MAAQiD,EACfb,KAAOY,sBAAsBZ,KAAKM,iBAAiBhD,GAAQuD,KAW7Df,YAAEuB,gCAAuB3D,EAAQE,aAC/BF,GAASD,KAAKG,MAAQA,EACfA,IACPF,EAASM,MAAMjB,QAAQ,SAAAuE,SAAKA,GAAE1D,MAAQA,IACtCF,EAASK,SAAShB,QAAQ,SAAAiE,GACxBA,EAAIvD,KAAKG,MAAQA,EACjB2D,EAAOF,uBAAuBL,EAAGpD,OAcrCkC,YAAE0B,mBAAU/D,GAIV,GAAMC,GAASsC,KAAKW,kBAAkBlD,EAAKH,OACrCmE,EAAa/D,EAAOD,KAAKG,MACzB8D,EAAYD,EAAa,EAAI,GAAI,CACvCzB,MAAOqB,uBAAuB3D,EAAQgE,GACtC1B,KAAOY,sBAAsBZ,KAAKM,iBAAiB5C,EAAOJ,OAAQoE,IAUpE5B,YAAE6B,mBAAUhE,GACV,GAAMiE,GAAa5B,KAAKM,iBAAiB3C,EAAKL,OACxCoE,GAAY,EAAK/D,EAAKC,KAC5BD,GAAOC,MAAQ8D,EACf1B,KAAOY,sBAAsBgB,EAAYF,IAO3C5B,YAAE+B,eACAzE,EACAK,sCACEH,MAAS,IACTC,KAAQ,IAGV,IAAQD,WAAOC,SAAMK,UACf4C,EAAMlD,EAAMR,MAAM,KAAKqD,MAAM,GAC7BzC,EAASP,EAAUC,EAAM4C,KAAKD,KAAMzC,EAAOC,EAMjD,IAJAG,EAASD,KAAKI,MAAO,EACrBH,EAASD,KAAKG,MAAQA,EACtBF,EAASD,KAAKc,OAAS,OAEF,IAAfiC,EAAItC,OACR8B,KAAOxC,QAAQE,OACR,CAMP,IALA,GAAM4B,GAAQwC,EAAU9B,KAAKI,WACvB2B,EAAQzC,EACR0C,EAAQxB,EAAIyB,MACZxB,EAAQ,EAELA,EAAQD,EAAIE,SACnBqB,EAAQA,EAAIhE,SAAS0C,EAEvBsB,GAAMhE,SAASmE,OAAOF,EAAK,EAAGtE,GAC9BqE,EAAMtE,KAAKQ,SAAU,EAErB+B,KAAOxC,QAAQ8B,GAIjBU,KAAOqB,uBAAuB3D,EAAQE,IAMxCkC,YAAEqC,gBAAOC,EAAQC,aACf,OAAS,IAAIC,SAAQ,SAACC,EAASC,GAC7B,GAAMC,GAAuB,SAAdJ,EAAK/D,IAEpB,OAAiB,WAAX8D,GACFb,EAAOkB,EAAS,YAAc,aAAaJ,GAClCE,EAAQvC,EAAK0C,uBAGT,WAAXN,GAAuBK,IAC3BJ,EAAOxE,MAAQwE,EAAKxE,KAEbwE,EAAKpE,SAA2B,SAAhBoE,EAAK9D,OAI1BiE,KAHAH,EAAO9D,OAAS,UAChBgE,UAWRzC,YAAE4C,uBAAchF,aACdA,GAAWA,GAAUsC,KAAKI,SAE1B,IAAMuC,MACElF,SAAMM,aAAUC,gBAgBxB,OAdMP,GAAKG,MAAQ,EACjB+E,EAAS/C,KAAKlC,EAAOH,OAErBS,EAAQjB,QAAQ,SAAC6F,MAAEhF,WAAOL,QAClBK,GAAQ,GACZ+E,EAAS/C,KAAKrC,KAIlBQ,EAAWhB,QAAQ,SAAAW,GACjBiC,EAAUkD,MAAMF,EAAQ3C,EAAK0C,cAAchF,OAItCiF,GAGX7C,YAAEgD,eACA,MAAS3F,GAAU2F,IAAI9C,KAAKI,UAAWJ,KAAKD,MCtQ9C,QACEgD,SACEC,gBAAO1E,GACL0B,KAAKiD,SAAS3E,EAAM0B,KAAK5C,OAE3B8F,gBAAO5E,EAAM6E,GACXnD,KAAKoD,OAAO9E,EAAM,SAAA+E,GAChBF,EAAGE,MAGPC,mBACEtD,KAAKuD,aCMLC,GACJ,cACA,oBACA,kPAIA1F,KAAM,SACN2F,QAASC,GACTC,OACEvG,MACEkB,KAAMtC,OACN4H,UAAU,GAEZC,KACEvF,MAAOlC,OAAQ0H,QACfF,UAAU,IAGdG,UACEC,uBACE5F,GAAIhB,GAAO4C,KAAK5C,KACZ6G,EAA+B,YAAhB7G,EAAKmB,OACpB2F,EAAa9G,EAAKa,SAAWb,EAAKS,KAClCsG,GAAW/G,EAAKa,SAA2B,SAAhBb,EAAKmB,MACpC,QACE6F,6BAA8BH,EAC9BI,oBAAqBJ,GAAgBC,EACrCI,eAAgBL,IAAiBC,EACjCK,gBAAiBJ,IAGrBK,yBACE,MAAOhB,GAAWxD,KAAK5C,KAAKQ,MAAQ,MCxCpC4F,GACJ,cACA,oBACA,0KAIA1F,KAAM,SACN2F,QAASC,GACTC,OACEvG,MACEkB,KAAMtC,OACN4H,UAAU,GAEZC,KACEvF,MAAOlC,OAAQ0H,QACfF,UAAU,IAGdG,UACEU,qBACE,MAAOjB,GAAWxD,KAAK5C,KAAKQ,MAAQ,wTCfxCE,KAAM,WACN2F,QAASC,GACTC,OACEvG,MACEkB,KAAMtC,OACN4H,UAAU,GAEZC,KACEvF,MAAOlC,OAAQ0H,QACfF,UAAU,IAGdc,YACEC,SAAUC,EACVC,SAAUC,GAEZf,UACEhG,oBACE,MAAOiC,MAAK5C,KAAKW,UAEnBC,iBACE,MAAOgC,MAAK5C,KAAKY,OAEnBP,gBACE,MAAQuC,MAAK5C,KAAKK,QC3BpBoG,EAAM,wQAGR/F,KAAM,WACN2F,QAASC,GACTC,OACEvG,KAAMpB,OACN+I,KAAM/I,OACN+D,KAAM/D,QAER0I,YACEC,SAAUC,EACVC,SAAUC,EACVE,WAAYC,GAEdC,OACE9H,cAAK+H,EAAQC,GACXhH,GAAIiH,GAAUrF,KAAKD,MAAQC,KAAKD,KAAKtC,MAAQ,MACzC0H,GAAOE,KAAaD,EAAOC,KAC7BrF,KAAKsF,MAAQ,GAAIxF,GAAMqF,EAAQnF,KAAKD,SAI1C3C,gBACE,OACEyG,IAAKA,IACLyB,MAAO,GAAIxF,GAAME,KAAK5C,KAAM4C,KAAKD,QAIrCgE,UACEwB,gBACE,MAAOvF,MAAKsF,MAAMlF,WAEpBrC,oBACE,MAAOiC,MAAKuF,KAAKxH,UAEnBC,iBACE,MAAOgC,MAAKuF,KAAKvH,OAEnBP,gBACE,MAAOuC,MAAKuF,KAAK9H,OAIrBsF,SACEyC,sBAAapI,EAAMK,GACjBW,GAAI2B,GAAOC,KAAKD,SACZ0F,EAAU1F,EAAa,QAAK,OAE5BsF,GADUtF,EAAW,MAAK,QAChBA,EAAW,MAAK,OAI9B,OAFA3C,GAAKiI,GAAW5H,EAAKK,KACrBV,EAAKqI,GAAWrI,EAAKqI,GAAQ/I,IAAI,SAAAgJ,iBAAQL,GAAQK,YAC1CtI,GAGTuI,oBAAWlI,GACTW,GAAIwH,GAAU5F,KAAK+E,SACRc,mBAAQzI,SAAM0I,WAAQC,WAAQC,WAazC,OAXIH,IAAmC,QAAzBA,EAAOI,eACnBL,EAAQE,OAAUA,MAClBF,EAAQE,OAAOC,GAAUtI,EAAKF,OAE9BqI,EAAQxI,KAAQA,MAChBwI,EAAQxI,KAAK2I,GAAUtI,EAAKF,MAG9BqI,EAAQC,OAASA,GAAU,MAC3BD,EAAQI,QAAUA,MAEXJ,GAGTM,iBAAQzI,aACN,KAAKuC,KAAK+E,KACR,MAAOzC,SAAQE,OAAO,aAGxBpE,IAAI+H,GAAUnG,KAAK+E,KAAKoB,kBAAYC,SAAOA,GAE3C,OAAOpG,MAAKqG,MAAMrG,KAAK2F,WAAWlI,IAC/B6I,KAAK,SAAAF,GACJhI,GAAIhB,GAAO+I,EAAQC,EAAIhJ,KACvB,OAAO4C,GAAKwF,aAAapI,EAAMK,OAKvC8I,6BACEvG,MAAKkD,OAAO,SAAU,SAAAzF,GACpBuC,EAAKsF,MAAMnD,OAAO,SAAU1E,GAAM6I,KAAK,SAAAF,SAAOpG,GAAKwG,MAAM,SAAUJ,OAGrEpG,KAAKkD,OAAO,SAAU,SAAAzF,GACpB,MAAIA,GAAKI,MAAQJ,EAAKQ,aACpBR,EAAKI,MAAQJ,EAAKI,UAIpBmC,GAAKsF,MAAMnD,OAAO,SAAU1E,GACzB6I,KAAK,WAEJtG,EAAKkG,QAAQzI,GACZ6I,KAAK,SAAAlJ,GACJ,IAAIA,EAGF,KAAM,OAFN4C,GAAKsF,MAAMzD,MAAMzE,EAAMK,KAK1BgJ,MAAM,SAAApD,GACL5F,EAAKc,OAAS,QACdmI,OAAOC,SAAWA,QAAQC,MAAMvD,OAInCoD,MAAM,SAAApD,SAAK5F,GAAKc,OAAS,YAIhCsI,qBACE7G,KAAKsD,YCxIIwD,EAAW,SAAUC,GAChC3I,GAAI4I,GAAM,GAAID,GACVE,EAAQF,EAAIrI,SAEhBuI,GAAM7D,OAAS,SAAU9E,EAAM4I,GAC7B9I,GAAIyF,GAAM7D,KAAK6D,IAEXV,EAAK,SAASE,GACZQ,IAAQR,EAAEQ,KAAOqD,GACnBA,EAAG7D,EAAEjG,MAGT4J,GAAIG,IAAI,IAAItD,MAAOvF,EAAQ6E,IAG7B8D,EAAMhE,SAAW,SAAU3E,EAAMlB,GAC/BgB,GAAIyF,GAAM7D,KAAK6D,GACfmD,GAAIR,MAAM,IAAI3C,MAAOvF,GAAUlB,KAAAA,EAAMyG,IAAAA,KAGvCoD,EAAM1D,QAAU,SAAUjF,EAAM6E,GAC9B/E,GAAIyF,GAAM7D,KAAK6D,GAEf,IAAIvF,EACF0I,EAAII,KAAK,IAAIvD,MAAOvF,EAAQ6E,OACvB,CACLU,EAAM,IAAIA,KACVzF,IACIiJ,IADMxD,EAAI3F,OACFlC,OAAOiB,KAAK+J,EAAIM,UACxBC,EAAQF,EAAMnH,OAAO,SAAAsH,SAAwB,KAAnBA,EAAEC,QAAQ5D,IACxC0D,GAAMxK,QAAQ,SAAAyK,GACZR,EAAII,KAAKI,EAAGrE,cC5BpBuE,GAAYC,QAAU,SAAAZ,GACpB,MAAmBA,EAAIa,QAAQ9K,MAAM,KAAhC+K,OAAIC,OAAIC,MAEb,IAAIF,EAAK,GAAY,IAAPA,IAAaC,EAAK,GAAY,IAAPA,GAAYC,GAAM,GACrD,KAAM,uCAGRjB,GAASC,GACTA,EAAIiB,UAAUN,EAAY5J,KAAM4J"}